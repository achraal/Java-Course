					*verification des packets :
rpm -q / rpm -qa | grep / yum search / dnf search 
					*installer les packets necessaires : 
dnf -y install NetworkManager
dnf -y install NetworkManager-tui
dnf -y install network-scripts
dnf -y install dhcpd*
dnf -y install dhcp-server
dnf -y install bind
dnf install samba*
dnf install openssh*
dnf install telnet telnet-server
dnf -y install httpd*
dnf -y install dovecot*
dnf -y install mc*
dnf -y install mysql*
dnf -y install postfix*
dnf- y install vsftpd*
dnf -y install nfs-utils*
dnf -y install openldap*
dnf install nagios 
dnf -y gcc glibc glibc-common perl httpd php wget gd gd-devel
dnf install openssl-devel
					*pour configurer l'interface reseau sous fedora :
-il faut aller /etc/sysconfig/network-scripts, ensuite creer un fichier ifcfg-"nom de linterface" . le chemin sera /etc/sysconfig/network-scripts/ifcfg-"nom de linterface"
-ce fichier serait configurer comme suit :

DEVICE=enp4s0f0
TYPE=Ethernet
NAME=enp4s0f0
IPADDR=192.168.100.5
PREFIX=24
NETMASK=255.255.255.0
GATEWAY=192.168.100.1
DNS1=192.168.100.2
ONBOOT=yes
BOOTPROTO=static

-ensuite redemarrez le service reseau en tapant {service network restart}
				
					*pour configurer dhcp sous fedora : 

-allez au chemin /etc/dhcp/dhcp.conf pour le visualiser utiliser la commande vi ou nano. ensuite le fichier serait vide aller au chemin /usr/share/doc/dhcp-server/dhcpd.conf.example, copiez le en tapant {cp /usr/share/doc/dhcp-server/dhcpd.conf.example /etc/dhcp/dhcp.conf } et ecraser ce dernier. parsuite vous pourrez configurer votreserveur DHCP comme suit 

subnet 192.168.100.0 netmask 255.255.255.0 {
  range 192.168.100.20 192.168.100.50;
  option domain-name-servers 192.168.100.2;
  option domain-name "home.lan";
  option routers 192.168.100.1;
  option broadcast-address 192.168.100.255;
  option subnet-mask 255.255.255.0;
  default-lease-time 600;
  max-lease-time 7200;
}
host PEGADOR-srv{
  hardware ethernet 08:00:07:26:c0:a5;
  fixed-address 192.168.100.30;
}

--> le host cest le nom du serveur

-ensuite redemarrez le service dhcp en tapant {systemctl restart dhcpd}
-pour checker en generale la configuration taper {nmcli connection show "nom de linterface"}

					*pour configurer dns primaire et secondaire sous fedora :

avant de commencer allez au chemin /etc/named.conf puis configurer le comme suit :

options {
	listen-on port 53 { 127.0.0.1; 192.168.100.2 };
	listen-on-v6 port 53 { ::1; };
	directory 	"/var/named";
	dump-file 	"/var/named/data/cache_dump.db";
	statistics-file "/var/named/data/named_stats.txt";
	memstatistics-file "/var/named/data/named_mem_stats.txt";
	secroots-file	"/var/named/data/named.secroots";
	recursing-file	"/var/named/data/named.recursing";
	allow-query     { localhost; 192.168.100.0/24 };

	/* 
	 - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
	 - If you are building a RECURSIVE (caching) DNS server, you need to enable 
	   recursion. 
	 - If your recursive DNS server has a public IP address, you MUST enable access 
	   control to limit queries to your legitimate users. Failing to do so will
	   cause your server to become part of large scale DNS amplification 
	   attacks. Implementing BCP38 within your network would greatly
	   reduce such attack surface 
	*/
	recursion yes;

	dnssec-validation yes;

	managed-keys-directory "/var/named/dynamic";
	geoip-directory "/usr/share/GeoIP";

	pid-file "/run/named/named.pid";
	session-keyfile "/run/named/session.key";

	/* https://fedoraproject.org/wiki/Changes/CryptoPolicy */
	include "/etc/crypto-policies/back-ends/bind.config";
};

logging {
        channel default_debug {
                file "data/named.run";
                severity dynamic;
        };
};

zone "home.lan" IN {
	type master;
	file "home.lan.zone";
	allow-transfer {192.168.100.3;};
	notify yes;
};

zone "100.168.192.in-addr.arpa" IN {
        type master;
        file "home.lan.rev";
	allow-transfer {192.168.100.3;};
	notify yes;
};

-ensuite allez au chemin /var/named et copiez le fichier "named.localhost" et creez un nouveau fichier en tapant ceci {cp named.localhost home.lan.zone} et ensuite le configurer come suit :

$TTL 1D
@	IN SOA	PEGADOR-srv.home.lan. root.home.lan. (
					0	; serial
					1D	; refresh
					1H	; retry
					1W	; expire
					3H )	; minimum
		IN	NS	PEGADOR-srv.
PEGADOR-srv	IN	A	192.168.100.2
client		IN	A	192.168.100.40


-ensuite copiez ce dernier dans un nouveau fichier {cp home.lan.zone home.lan.rev} et sa configuration serait comme suit :

$TTL 1D
@	IN SOA	PEGADOR-srv.home.lan. root.home.lan. (
					0	; serial
					1D	; refresh
					1H	; retry
					1W	; expire
					3H )	; minimum
	IN	NS	PEGADOR-srv.
2	IN	PTR	PEGADOR-srv.home.lan.
40	IN	PTR	client.home.lan.

-ensuite tapez "ll" vous verrez que vos nouveaux fichiers nont pas des droits named tapez ceci {chown named:root home.lan.*}
-ensuite redemarrer le service named "service named restart"

				dns secondaire :
options {
	listen-on port 53 { 127.0.0.1; 192.168.100.2 };
	listen-on-v6 port 53 { ::1; };
	directory 	"/var/named";
	dump-file 	"/var/named/data/cache_dump.db";
	statistics-file "/var/named/data/named_stats.txt";
	memstatistics-file "/var/named/data/named_mem_stats.txt";
	secroots-file	"/var/named/data/named.secroots";
	recursing-file	"/var/named/data/named.recursing";
	allow-query     { localhost; 192.168.100.0/24 };

	/* 
	 - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
	 - If you are building a RECURSIVE (caching) DNS server, you need to enable 
	   recursion. 
	 - If your recursive DNS server has a public IP address, you MUST enable access 
	   control to limit queries to your legitimate users. Failing to do so will
	   cause your server to become part of large scale DNS amplification 
	   attacks. Implementing BCP38 within your network would greatly
	   reduce such attack surface 
	*/
	recursion yes;

	dnssec-validation yes;

	managed-keys-directory "/var/named/dynamic";
	geoip-directory "/usr/share/GeoIP";

	pid-file "/run/named/named.pid";
	session-keyfile "/run/named/session.key";

	/* https://fedoraproject.org/wiki/Changes/CryptoPolicy */
	include "/etc/crypto-policies/back-ends/bind.config";
};

logging {
        channel default_debug {
                file "data/named.run";
                severity dynamic;
        };
};

zone "home.lan" IN {
	type slave;
	file "home.lan.zone";
	masters {192.168.100.2;};
};

zone "100.168.192.in-addr.arpa" IN {
        type slave;
        file "home.lan.rev";
	masters {192.168.100.2;};
};

-sans oublier de configurer le fichier resolv.conf qui se trouve dans /etc/resolv.conf comme suit

options edns0 trust-ad
# This is /run/systemd/resolve/stub-resolv.conf managed by man:systemd-resolved(8).
# Do not edit.
#
# This file might be symlinked as /etc/resolv.conf. If you're looking at
# /etc/resolv.conf and seeing this text, you have followed the symlink.
#
# This is a dynamic resolv.conf file for connecting local clients to the
# internal DNS stub resolver of systemd-resolved. This file lists all
# configured search domains.
#
# Run "resolvectl status" to see details about the uplink DNS servers
# currently in use.
#
# Third party programs should typically not access this file directly, but only
# through the symlink at /etc/resolv.conf. To manage man:resolv.conf(5) in a
# different way, replace this symlink by a static file or a different symlink.
#
# See man:systemd-resolved.service(8) for details about the supported modes of
# operation for /etc/resolv.conf.

search home.lan.
nameserver 192.168.100.2

					*pour configurer samba sous fedora : 
-copier l'exemple smb.conf.example dans smb.conf avec la commande cp smb.conf.example smb.conf,
ensuite remplissez le fichier comme l'exemple suivant : 

# This is the main Samba configuration file. For detailed information about the
# options listed here, refer to the smb.conf(5) manual page. Samba has a huge
# number of configurable options, most of which are not shown in this example.
#
# The Samba Wiki contains a lot of step-by-step guides installing, configuring,
# and using Samba:
# https://wiki.samba.org/index.php/User_Documentation
#
# In this file, lines starting with a semicolon (;) or a hash (#) are
# comments and are ignored. This file uses hashes to denote commentary and
# semicolons for parts of the file you may wish to configure.
#
# NOTE: Run the "testparm" command after modifying this file to check for basic
# syntax errors.
#
#---------------
# Security-Enhanced Linux (SELinux) Notes:
#
# Turn the samba_domain_controller Boolean on to allow a Samba PDC to use the
# useradd and groupadd family of binaries. Run the following command as the
# root user to turn this Boolean on:
# setsebool -P samba_domain_controller on
#
# Turn the samba_enable_home_dirs Boolean on if you want to share home
# directories via Samba. Run the following command as the root user to turn this
# Boolean on:
# setsebool -P samba_enable_home_dirs on
#
# If you create a new directory, such as a new top-level directory, label it
# with samba_share_t so that SELinux allows Samba to read and write to it. Do
# not label system directories, such as /etc/ and /home/, with samba_share_t, as
# such directories should already have an SELinux label.
#
# Run the "ls -ldZ /path/to/directory" command to view the current SELinux
# label for a given directory.
#
# Set SELinux labels only on files and directories you have created. Use the
# chcon command to temporarily change a label:
# chcon -t samba_share_t /path/to/directory
#
# Changes made via chcon are lost when the file system is relabeled or commands
# such as restorecon are run.
#
# Use the samba_export_all_ro or samba_export_all_rw Boolean to share system
# directories. To share such directories and only allow read-only permissions:
# setsebool -P samba_export_all_ro on
# To share such directories and allow read and write permissions:
# setsebool -P samba_export_all_rw on
#
# To run scripts (preexec/root prexec/print command/...), copy them to the
# /var/lib/samba/scripts/ directory so that SELinux will allow smbd to run them.
# Note that if you move the scripts to /var/lib/samba/scripts/, they retain
# their existing SELinux labels, which may be labels that SELinux does not allow
# smbd to run. Copying the scripts will result in the correct SELinux labels.
# Run the "restorecon -R -v /var/lib/samba/scripts" command as the root user to
# apply the correct SELinux labels to these files.
#
#--------------
#
#======================= Global Settings =====================================

[global]

# ----------------------- Network-Related Options -------------------------
#
# workgroup = the Windows NT domain name or workgroup name, for example, MYGROUP.
#
# server string = the equivalent of the Windows NT Description field.
#
# netbios name = used to specify a server name that is not tied to the hostname,
#                maximum is 15 characters.
#
# interfaces = used to configure Samba to listen on multiple network interfaces.
# If you have multiple interfaces, you can use the "interfaces =" option to
# configure which of those interfaces Samba listens on. Never omit the localhost
# interface (lo).
#
# hosts allow = the hosts allowed to connect. This option can also be used on a
# per-share basis.
#
# hosts deny = the hosts not allowed to connect. This option can also be used on
# a per-share basis.
#
	workgroup = HOME 
	server string = fedora

;	netbios name = fedora

;	interfaces = lo eth0 192.168.100.2/24 
;	hosts allow = 127. 192.168.100. 

# --------------------------- Logging Options -----------------------------
#
# log file = specify where log files are written to and how they are split.
#
# max log size = specify the maximum size log files are allowed to reach. Log
# files are rotated when they reach the size specified with "max log size".
#

	# log files split per-machine:
	log file = /var/log/samba/log.%m
	# maximum size of 50KB per log file, then rotate:
	max log size = 50

# ----------------------- Standalone Server Options ------------------------
#
# security = the mode Samba runs in. This can be set to user, share
# (deprecated), or server (deprecated).
#
# passdb backend = the backend used to store user information in. New
# installations should use either tdbsam or ldapsam. No additional configuration
# is required for tdbsam. The "smbpasswd" utility is available for backwards
# compatibility.
#

	security = user
	passdb backend = tdbsam


# ----------------------- Domain Members Options ------------------------
#
# security = must be set to domain or ads.
#
# passdb backend = the backend used to store user information in. New
# installations should use either tdbsam or ldapsam. No additional configuration
# is required for tdbsam. The "smbpasswd" utility is available for backwards
# compatibility.
#
# realm = only use the realm option when the "security = ads" option is set.
# The realm option specifies the Active Directory realm the host is a part of.
#
# password server = only use this option when the "security = server"
# option is set, or if you cannot use DNS to locate a Domain Controller. The
# argument list can include My_PDC_Name, [My_BDC_Name], and [My_Next_BDC_Name]:
#
# password server = My_PDC_Name [My_BDC_Name] [My_Next_BDC_Name]
#
# Use "password server = *" to automatically locate Domain Controllers.

;	security = domain
;	passdb backend = tdbsam
;	realm = MY_REALM

;	password server = <NT-Server-Name>

# ----------------------- Domain Controller Options ------------------------
#
# security = must be set to user for domain controllers.
#
# passdb backend = the backend used to store user information in. New
# installations should use either tdbsam or ldapsam. No additional configuration
# is required for tdbsam. The "smbpasswd" utility is available for backwards
# compatibility.
#
# domain master = specifies Samba to be the Domain Master Browser, allowing
# Samba to collate browse lists between subnets. Do not use the "domain master"
# option if you already have a Windows NT domain controller performing this task.
#
# domain logons = allows Samba to provide a network logon service for Windows
# workstations.
#
# logon script = specifies a script to run at login time on the client. These
# scripts must be provided in a share named NETLOGON.
#
# logon path = specifies (with a UNC path) where user profiles are stored.
#
#
;	security = user
;	passdb backend = tdbsam

;	domain master = yes
;	domain logons = yes

	# the following login script name is determined by the machine name
	# (%m):
;	logon script = %m.bat
	# the following login script name is determined by the UNIX user used:
;	logon script = %u.bat
;	logon path = \\%L\Profiles\%u
	# use an empty path to disable profile support:
;	logon path =

	# various scripts can be used on a domain controller or a stand-alone
	# machine to add or delete corresponding UNIX accounts:

;	add user script = /usr/sbin/useradd "%u" -n -g users
;	add group script = /usr/sbin/groupadd "%g"
;	add machine script = /usr/sbin/useradd -n -c "Workstation (%u)" -M -d /nohome -s /bin/false "%u"
;	delete user script = /usr/sbin/userdel "%u"
;	delete user from group script = /usr/sbin/userdel "%u" "%g"
;	delete group script = /usr/sbin/groupdel "%g"


# ----------------------- Browser Control Options ----------------------------
#
# local master = when set to no, Samba does not become the master browser on
# your network. When set to yes, normal election rules apply.
#
# os level = determines the precedence the server has in master browser
# elections. The default value should be reasonable.
#
# preferred master = when set to yes, Samba forces a local browser election at
# start up (and gives itself a slightly higher chance of winning the election).
#
;	local master = no
;	os level = 33
;	preferred master = yes

#----------------------------- Name Resolution -------------------------------
#
# This section details the support for the Windows Internet Name Service (WINS).
#
# Note: Samba can be either a WINS server or a WINS client, but not both.
#
# wins support = when set to yes, the NMBD component of Samba enables its WINS
# server.
#
# wins server = tells the NMBD component of Samba to be a WINS client.
#
# wins proxy = when set to yes, Samba answers name resolution queries on behalf
# of a non WINS capable client. For this to work, there must be at least one
# WINS server on the network. The default is no.
#
# dns proxy = when set to yes, Samba attempts to resolve NetBIOS names via DNS
# nslookups.

;	wins support = yes
;	wins server = w.x.y.z
;	wins proxy = yes

;	dns proxy = yes

# --------------------------- Printing Options -----------------------------
#
# The options in this section allow you to configure a non-default printing
# system.
#
# load printers = when set you yes, the list of printers is automatically
# loaded, rather than setting them up individually.
#
# cups options = allows you to pass options to the CUPS library. Setting this
# option to raw, for example, allows you to use drivers on your Windows clients.
#
# printcap name = used to specify an alternative printcap file.
#

	load printers = yes
	cups options = raw

;	printcap name = /etc/printcap
	# obtain a list of printers automatically on UNIX System V systems:
;	printcap name = lpstat
;	printing = cups

# --------------------------- File System Options ---------------------------
#
# The options in this section can be un-commented if the file system supports
# extended attributes, and those attributes are enabled (usually via the
# "user_xattr" mount option). These options allow the administrator to specify
# that DOS attributes are stored in extended attributes and also make sure that
# Samba does not change the permission bits.
#
# Note: These options can be used on a per-share basis. Setting them globally
# (in the [global] section) makes them the default for all shares.

;	map archive = no
;	map hidden = no
;	map read only = no
;	map system = no
;	store dos attributes = yes


#============================ Share Definitions ==============================

[homes]
	comment = Home Directories
	browseable = no
	writable = yes
;	valid users = %S
;	valid users = MYDOMAIN\%S

[printers]
	comment = All Printers
	path = /var/tmp
	browseable = no
	guest ok = no
	writable = no
	printable = yes

[partage]
        comment = All Printers
        path = /partage
	valid users = usersmb, @SMBGROUP
        browseable = yes
        guest ok = yes
        writable = yes
        printable = yes

# Un-comment the following and create the netlogon directory for Domain Logons:
;	[netlogon]
;	comment = Network Logon Service
;	path = /var/lib/samba/netlogon
;	guest ok = yes
;	writable = no
;	share modes = no

# Un-comment the following to provide a specific roaming profile share.
# The default is to use the user's home directory:
;	[Profiles]
;	path = /var/lib/samba/profiles
;	browseable = no
;	guest ok = yes

# A publicly accessible directory that is read only, except for users in the
# "staff" group (which have write permissions):
;	[public]
;	comment = Public Stuff
;	path = /home/samba
;	public = yes
;	writable = no
;	printable = no
;	write list = +staff


-ensuite creez un groupe et un utilisateur par exemple : 
	groupadd SMBGROUP
	useradd -g SMBGROUP usersmb
-donnez le mot de passe a ce user et donnez lui les droits :
	smbpasswd -a usersmb
	chmod 777 usersmb
-creez le dossier de partage par exemple "partage" comme on a mis dans le fichier de configuration : mkdir partage, ensuite changer le proprietaire au dossier {chown usersmb:SMBGROUP /partage/}
-enfin forcez le selinux pour que le partage s'execute, apres stoppez le firewall et redemarrez le service smb
	setenforce 0
	systemctl stop firewalld
	systemctl restart smb


								*SSH
-ensuite en allant sur le chemin /etc/ssh/sshd_config et le fichier sera comme suit : 


#	$OpenBSD: sshd_config,v 1.104 2021/07/02 05:11:21 dtucker Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# To modify the system-wide sshd configuration, create a  *.conf  file under
#  /etc/ssh/sshd_config.d/  which will be automatically included below
Include /etc/ssh/sshd_config.d/*.conf

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
Port 22
Protocol 2
#AddressFamily any
ListenAddress 192.168.100.5
#ListenAddress ::

#HostKey /etc/ssh/ssh_host_rsa_key
#HostKey /etc/ssh/ssh_host_ecdsa_key
#HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# Logging
#SyslogFacility AUTH
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin prohibit-password
#StrictModes yes
MaxAuthTries 3
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no

# Change to no to disable s/key passwords
#KbdInteractiveAuthentication yes

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the KbdInteractiveAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via KbdInteractiveAuthentication may bypass
# the setting of "PermitRootLogin prohibit-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and KbdInteractiveAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Fedora and may cause several
# problems.
#UsePAM no

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
#X11Forwarding no
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes
#PrintMotd yes
#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# override default of no subsystems
Subsystem	sftp	/usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server


- globalement les changements seront les suivants :
Port 22
Protocol 2
ListenAddress "ip du serveur"
PermitRootLogin prohibit-passwd

- ensuite vous redemarrer le service avec : systemctl restart sshd


						*telnet

On cree un utilisateur par la commande : # useradd nom-de-user
Et son motdepass : #passwd nom-de-user
Par la suite vous redémarrez le service : systemctl restart telnet.socket
- A partir d’un client Windows lancer le cmd sous admin et taper cette commande pour activer le telnet 
			dism /online /Enable-Feature /FeatureName:TelnetClient
et vous rentrer le mot de passe et le user

						*APACHE



*on commence par cd /var/www/html pour creer des fichiers d'extensions html dans des dossiers par exemple index.html et remplissez avec ce que vous voulez

*cd /etc/httpd/conf/httpd.conf ensuite ajouter la ligne de commande qui permet de specifier l'adresse de l'ecoute du port {listen 80} et on continue la configuration comme suit : 

			ServerRoot "/etc/httpd"
			Litsen 80
			IncludeOptional conf.d/*.conf
			User apache
			Group apache
			ServerAdmin root@"nom du domaine"
			ServerName "nom du serveur.nom du domaine"
			DocumentRoot "/var/www/html"

*parsuite on ajoute l'acces au site avec la configuration suivante :
			<VirtualHost ip du serveur:80>
    				ServerAdmin root@"domaine"
    				ServerName "nom du serveur.nom du domaine"
   				DocumentRoot /var/www/srv1
			</VirtualHost>


*et ensuite configurer le fichier "hosts" dans /etc/hosts en ajoutant l'adresse ip de votre serveur et son nom :

# Loopback entries; do not change.
# For historical reasons, localhost precedes localhost.localdomain:
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
# See hosts(5) for proper format and other examples:
# 192.168.1.10 foo.mydomain.org foo
# 192.168.1.13 bar.mydomain.org bar

192.168.100.5	peligroso.home.lan


*ensuite dans le fichier de zone directe du bind on ajoute l'alias et le nom du serveur comme suit : 
{site 	IN	CNAME	peligroso.home.lan.}, puis on redemarre les services httpd et named avec :
	systemctl restart named
	systemctl restart httpd


					*serveur de messagerie
-apres avoir installer les packets necessaires mettez cette commande {vi /etc/postfix/main.cf} et le configurer comme suit : 

		mail_owner = postfix
		myhostname = "nom du serveur.domaine"
		mydomain = "domaine"
		myorigin = $mydomain
		inet_interfaces = all
		inet_protocols = all
		mydestination = $myhostname, localhost.$mydomain, localhost, $mydomain
		home_mailbox = Maildir/

-ensuite on doit choisir le service Postfix au lieu de sendmail avec ces commandes :
		 alternatives --config mta
		 chkconfig postfix on 

-apres mettez {vi /etc/dovecot/dovecot.conf} et configurer le comme suit :

		protocols = imap pop3 lmtp submission

-ensuite il faut mettre a jour le fichier hosts avec vi /etc/hosts et configurer le comme suit :

# Loopback entries; do not change.
# For historical reasons, localhost precedes localhost.localdomain:
127.0.0.1   "nom du serveur.domaine" localhost.localdomain localhost localhost4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
# See hosts(5) for proper format and other examples:
# 192.168.1.10 foo.mydomain.org foo
# 192.168.1.13 bar.mydomain.org bar

-ajouter un nouveau utilisateur avec son mot de passe, et creer le dossier Maildir dans home/"user"/
-redemarrer tout les services avec :
		systemctl restart postfix
		systemctl restart dovecot
		systemctl restart mc

-ensuite pour tester envoyer un mail a ce nouveau user avec : {mail.q postfix "nom du user"} 
et la structure sera comme suit :
Subject : ************
*****************************
*****************************
.

-pour verifier ecrire la commande mc et verifier dans le chemin /"user"/Maildir/new est ce que le message est bien envoye



					*FTP

-apres avoir installer le service vsftpd on va vers {/etc/vsftpd/vsftpd.conf} pour configurer le service, la configuration sera la suivante :


	anonymous_enable=NO
	local_enable=YES
	write_enable=YES
	local_umask=022
	anon_upload_enable=YES
	anon_mkdir_write_enable=YES
	dirmessage_enable=YES
	xferlog_enable=YES
	connect_from_port_20=YES
	listen_port=21
	xferlog_std_format=YES
	ftpd_banner= "message"
	chroot_local_user=YES
	chroot_list_enable=YES
	chroot_list_file=/etc/vsftpd/chroot_list
	allow_writeable_chroot=YES
	listen=YES
	allow_anon_ssl=YES
	listen_ipv6=NO
	pam_service_name=vsftpd
	userlist_enable=YES
	userlist_file=/etc/vsftpd/user_list
	pasv_min_port=3000
	pasv_max_port=3500
	max_login_fails=3

-ajouter le fichier chroot_list ou on ecrit dedans le nom du user ftp avec {vi /etc/vsftpd/chroot_list}

-apres on va creer un utilisateur et son mot de passe, ensuite on doit creer le fichier chroot_list dans /etc/vsftpd, dans le fichier on va ecrire le nom du user

-sans oublier de creer des dossier de sauvegarde ftp dans ce user et donnez tous les droits aux dossier et au utilisateur avec {chmod 777 user} et {chmod 777 dossier}

-parsuite il faut redemarrer le service avec :
	{systemctl restart vsftpd} 
-et desctiver le firewall et le se linux avec :
	{systemctl stop firewalld.service}
	{setenforce 0}

-pour verifier on met avec le cmd {ftp "adresse ip"} et on entre le user et ensuite le mot de passe 
ou on peut verifier avec filezilla en mettant ladresse ip le numero de port le user et le mot de pase et on pourra installer ce qu'on veut depuis le serveur ftp


						*NFS

-apres avoir installer tous les paquets necessaires pour nfs on va creer un dossier dans home nommer par exemple share, dans ce dossier on va ajouter un fichier par exemple sans oublier de donner tous les droits au dossier et au fichier avec {chmod 777 share/}

-ensuite allez au fichier exports {vi /etc/exports} et on va ecrire ceci :

			/chemin/share 192.168.100.5(rw)


-ensuite on redemarre 2 services : 
	systemctl restart nfs-server.service
	systemctl restart rpcbind

-et on met la commande {showmount -e "ip du serveur"}
-ensuite pour monter on va vers /mnt et on creer un dossier et on lui donne tous les droits
-apres on met la commande {mount -t ip du srv:/chemin/share /mnt/dossier}, avec cette commande le montage sera fini 

-ensuite pour la verification installer cockpit avec : 

	dnf -y install cockpit
	systemctl enable --now cockpit.socket
	firewall-cmd --add-service=cockpit
	firewall-cmd --add-service=cockpit --permanent

-ensuite pour verifier taper comme URL : https://ip du srv:9090 et puis entrer votre login et mdp


					*nagios

- ensuite on met la commande {vi /etc/httpd.conf.d/nagios.conf} et on le configure comme suit :
-on ajoute un login et un mdp avec la commande {htpasswd /etc/nagios/passwd "user"} et on tape le mdp
-ensuite on redemarre le service nagios avec la commande {systemctl restart nagios.service}
-on accede via navigateur en tapant l'adresse ip du serveur suivie de /nagios


					*openLDAP

-on tape la commande suivante {vi /etc/openldap/slapd.d/cn\=config/olcDatabase\=\{2\}bdb.ldif} ensuite on le configure comme suit :


olcDbDirectory: /var/lib/ldap
olcSuffix: dc=home,dc=lan
olcRootDN: cn=Manager,dc=home,dc=lan
olcRootPW: {SSHA}JXXBpbZ5RXYye3pfypTfCQ+Yi2YMX6kH


-ensuite on met un mdp avec la commande {slappasswd} et on entre notre mdp et on copie le mdp chiffré et on le met dans le fichier {olcDatabase\=\{2\}bdb.ldif}
-on tape la commande suivante {vi /etc/openldap/slapd.d/cn\=config/olcDatabase\=\{1\}monitor.ldif} ensuite on le configure comme suit :

# AUTO-GENERATED FILE - DO NOT EDIT!! Use ldapmodify.
# CRC32 de0dea00
dn: olcDatabase={1}monitor
objectClass: olcDatabaseConfig
olcDatabase: {1}monitor
olcAccess: {0}to * by dn.base="gidNumber=0+uidNumber=0,cn=peercred,cn=external
 ,cn=auth" read by dn.base="cn=Manager,dc=home,dc=lan" read by * none
structuralObjectClass: olcDatabaseConfig
entryUUID: bffc865c-35dd-103e-9988-bd247c8f2f78
creatorsName: cn=config
createTimestamp: 20231223125135Z
entryCSN: 20231223125135.610284Z#000000#000#000000
modifiersName: cn=config
modifyTimestamp: 20231223125135Z

-on met la commande {updatedb} et {systemctl restart slapd.service}
-ensuite on affiche le schema LDAP avec la commande :
	{ldapsearch -LLL -Y EXTERNAL -H ldapi:/// -b cn=config dn}
-ensuite on ajoute les fichiers cosine, nis et inetorgperson avec la commande et on redemarre le service slapd : 
	{ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif}
        {ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif}
        {ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif}



-on met la commande {cd /var/lib/ldap} et on creer des fichiers qu'on va configurer, on commence avec {vi dn.ldif} :

dn: dc=home,dc=lan
objectClass: top
objectClass: dcObject
objectClass: organization
o: org1
dc: home


dn: cn=Manager,dc=home,dc=lan
objectClass: simplesecurityobject
objectClass: organizationalRole
cn: Manager
userPassword: {SSHA}JXXBpbZ5RXYye3pfypTfCQ+Yi2YMX6kH


-ensuite {vi ou.ldif} :

dn: ou=users,dc=home,dc=lan
objectClass: top
objectClass: organizationalUnit
ou: users


dn: ou=groups,dc=home,dc=lan
objectClass: top
objectClass: organizationalUnit
ou: groups


-on ajoute ces 2 fichiers a la base de donnees LDAP avec la commande : 
		{ldapadd -x -W -D "cn=Manager,dc=domain,dc=domaine"} -f dn.ldif
                {ldapadd -x -W -D "cn=Manager,dc=domain,dc=domaine"} -f ou.ldif
-on verifie l'existance des fichiers avec la commande : 
		{ldapsearch -x -b "dc=domaine,dc=domaine" -LLL}
-ensuite on cree le nouvel utilisateur qui aura tous les comptes ensuite on continue la configurationdes 2 autres fichiers


-ensuite {vi users.ldif} :

dn: uid=ldap1,ou=users,dc=home,dc=lan
objectClass: top
objectClass: account
objectClass: posixAccount
objectClass: shadowAccount
uid: ldap1
cn: ldap1
userPassword: {SSHA}/J1LPuuVXs/bv+6uPCq3/xz16qrXieli 
loginShell: /bin/bash
uidNumber: 1004
gidNumber: 1005
homeDirectory: /home/





  





